name: Release

on:
  push:
    branches:
      - 'main'
    paths-ignore:
      - '.github/**/*.yml'
      - '.gitignore'

jobs:

  build-project:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}
      param: ${{ steps.get-param.outputs.param }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Nodejs
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-3

      - name: Login to AWS CodeArtifact
        run: aws codeartifact login --tool npm --repository poc-inetum --domain velco --domain-owner 825794536530 --region eu-west-3

      - name: Install npm dependencies
        run: npm ci

      - name: Get AWS Parameter value
        id: get-param
        run: echo "param=$(aws ssm get-parameter --name /poc-inetum/production/api-url --query "Parameter.Value" --output text)" >> $GITHUB_OUTPUT

      - name: Write environment.prod.ts file
        uses: DamianReeves/write-file-action@master
        with:
          path: ./src/environments/environment.prod.ts
          contents: |
            export const environment = {
              production: true,
              apiUrl: ${{ steps.get-param.outputs.param }}
            };

      - name: Get current version
        id: get-version
        run: echo "version=$(npm pkg get version --raw | tr -d \")" >> $GITHUB_OUTPUT

      - name: Build artefact
        run: npm run build

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: dist/frontend

  release-project:
    name: Release
    runs-on: ubuntu-latest
    needs: build-project
    steps:

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: build

      - name: Archive artifact
        uses: thedoctor0/zip-release@master
        with:
          filename: build-${{ needs.build-project.outputs.version }}.zip

      - name: Create a Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: v${{ needs.build-project.outputs.version }}
          tag: ${{ needs.build-project.outputs.version }}
          artifactErrorsFailBuild: true
          artifacts: build-${{ needs.build-project.outputs.version }}.zip
          artifactContentType: application/zip
          skipIfReleaseExists: true

  deploy-project:
    name: Deploy
    runs-on: ubuntu-latest
    needs: release-project

    env:
      S3_BUCKET: 'poc-devops-frontend'
      CDN_DISTRIBUTION_ID: 'E2SZRISXTY5W0O'
      AWS_REGION: 'eu-west-3'

    steps:

      - name: Download latest release asset
        id: download-release-asset
        uses: robinraju/release-downloader@v1.7
        with:
          latest: true
          fileName: "*.zip"

      - name: Unzip asset release
        run: |
          unzip -d release build-${{ steps.download-release-asset.outputs.tag_name }}.zip

      - name: Print results
        run: |
          ls -al
          echo "tag ${{ steps.download-release-asset.outputs.tag_name }}"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-3

      - name: Deploy asset to AWS s3
        run: |
          aws s3 rm s3://${{ env.S3_BUCKET }}/ --recursive
          aws s3 cp release s3://${{ env.S3_BUCKET }} --recursive
          aws cloudfront create-invalidation --distribution-id ${{ env.CDN_DISTRIBUTION_ID }} --paths "/*"
